kind: pipeline
type: docker
name: CI

trigger:
  event:
    - push
  branch:
    - master

steps:
  - name: build-server
    image: dart:stable
    commands:
      - dart pub get
      - dart compile exe bin/server.dart -o bin/server
    
  - name: docker-build
    image: plugins/docker
    settings:
      dockerfile: Dockerfile
      context: .
      registry: hub.codefirst.iut.uca.fr
      repo: hub.codefirst.iut.uca.fr/remi.arnal/passworld-api
      username:
        from_secret: SECRET_REGISTRY_USERNAME
      password:
        from_secret: SECRET_REGISTRY_PASSWORD
    depends_on: [build-server]

  - name: docker-deployment
    image: hub.codefirst.iut.uca.fr/thomas.bellembois/codefirst-dockerproxy-clientdrone:latest
    environment:
        IMAGENAME: hub.codefirst.iut.uca.fr/remi.arnal/passworld-api:latest
        CONTAINERNAME: passworld-api
        COMMAND: create
        OVERWRITE: true
    depends_on: [docker-build]

  - name: db_creation
    image: hub.codefirst.iut.uca.fr/thomas.bellembois/codefirst-dockerproxy-clientdrone:latest
    environment:
        IMAGENAME: postgres:15
        CONTAINERNAME: db_accounts
        COMMAND: create
        #OVERWRITE: false
        #PRIVATE: false
        CODEFIRST_CLIENTDRONE_ENV_MARIADB_ROOT_PASSWORD:
          from_secret: db_root_password
        CODEFIRST_CLIENTDRONE_ENV_MARIADB_DATABASE:
          from_secret: db_database
        CODEFIRST_CLIENTDRONE_ENV_MARIADB_USER:
          from_secret: db_user
        CODEFIRST_CLIENTDRONE_ENV_MARIADB_PASSWORD:
          from_secret: db_password

  - name: database
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: test